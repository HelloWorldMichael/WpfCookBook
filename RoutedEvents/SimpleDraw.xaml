<UserControl x:Class="RoutedEvents.SimpleDraw"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
	<!--If we try to intercept events such as mouse events on the Canvas, we get nothing. The 
		reason is that the Canvashas a nullbackground (this is the default setting for all panels), 
		so all mouse events fall throughto its containing element. If we need those events on 
		the Canvas, we'll set its Backgroundto something other than null. By the way, 
		Brushes.Transparentworks just fine for this purpose.-->
	<Canvas Background="White" Name="_root" MouseLeftButtonDown="OnMouseDown" MouseMove="OnMouseMove" MouseUp="OnMouseUp">
		<Rectangle Stroke="Black" Width="25" Height="25" Canvas.Left="5" Canvas.Top="5" Fill="Red" />
		<Rectangle Stroke="Black" Width="25" Height="25" Canvas.Left="35" Canvas.Top="5" Fill="Blue" />
		<Rectangle Stroke="Black" Width="25" Height="25" Canvas.Left="65" Canvas.Top="5" Fill="Yellow" />
		<Rectangle Stroke="Black" Width="25" Height="25" Canvas.Left="95" Canvas.Top="5" Fill="Green" />
		<Rectangle Stroke="Black" Width="25" Height="25" Canvas.Left="125" Canvas.Top="5" Fill="Black" />
	</Canvas>
</UserControl>
